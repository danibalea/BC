{
	"id": "0f539ccb095be32427f73856542bff69",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"zombies/ownable.sol": {
				"content": "/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"zombies/ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							}
						},
						"title": "Ownable\r"
					},
					"evm": {
						"assembly": "    /* \"zombies/ownable.sol\":195:1001  contract Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"zombies/ownable.sol\":450:507  function Ownable() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"zombies/ownable.sol\":450:507  function Ownable() public {\r... */\n  pop\n    /* \"zombies/ownable.sol\":491:501  msg.sender */\n  caller\n    /* \"zombies/ownable.sol\":483:488  owner */\n  0x0\n  dup1\n    /* \"zombies/ownable.sol\":483:501  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"zombies/ownable.sol\":195:1001  contract Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"zombies/ownable.sol\":195:1001  contract Ownable {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x8da5cb5b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"zombies/ownable.sol\":217:237  address public owner */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_4\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_4:\n        /* \"zombies/ownable.sol\":217:237  address public owner */\n      pop\n      tag_5\n      jump(tag_6)\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"zombies/ownable.sol\":825:998  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"zombies/ownable.sol\":825:998  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      tag_8\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"zombies/ownable.sol\":217:237  address public owner */\n    tag_6:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"zombies/ownable.sol\":825:998  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_9:\n        /* \"zombies/ownable.sol\":640:645  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"zombies/ownable.sol\":626:645  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"zombies/ownable.sol\":626:636  msg.sender */\n      caller\n        /* \"zombies/ownable.sol\":626:645  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"zombies/ownable.sol\":618:646  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_11\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_11:\n        /* \"zombies/ownable.sol\":922:923  0 */\n      0x0\n        /* \"zombies/ownable.sol\":902:924  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"zombies/ownable.sol\":902:910  newOwner */\n      dup2\n        /* \"zombies/ownable.sol\":902:924  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"zombies/ownable.sol\":894:925  require(newOwner != address(0)) */\n      iszero\n      iszero\n      tag_13\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_13:\n        /* \"zombies/ownable.sol\":960:968  newOwner */\n      dup1\n        /* \"zombies/ownable.sol\":932:969  OwnershipTransferred(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"zombies/ownable.sol\":953:958  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"zombies/ownable.sol\":932:969  OwnershipTransferred(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"zombies/ownable.sol\":984:992  newOwner */\n      dup1\n        /* \"zombies/ownable.sol\":976:981  owner */\n      0x0\n      dup1\n        /* \"zombies/ownable.sol\":976:992  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"zombies/ownable.sol\":825:998  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820c74c6343c6ec5ba71b9f147cb1a24404d2ee7d35bf7f515b17a8b110b85b7d2b0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610291806100606000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610051578063f2fde38b146100a8575b600080fd5b34801561005d57600080fd5b506100666100eb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100b457600080fd5b506100e9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610110565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561016b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156101a757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820c74c6343c6ec5ba71b9f147cb1a24404d2ee7d35bf7f515b17a8b110b85b7d2b0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x291 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66 PUSH2 0xEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x110 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc7 0x4c PUSH4 0x43C6EC5B 0xa7 SHL SWAP16 EQ PUSH29 0xB1A24404D2EE7D35BF7F515B17A8B110B85B7D2B002900000000000000 ",
							"sourceMap": "195:806:0:-;;;450:57;8:9:-1;5:2;;;30:1;27;20:12;5:2;450:57:0;491:10;483:5;;:18;;;;;;;;;;;;;;;;;;195:806;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610051578063f2fde38b146100a8575b600080fd5b34801561005d57600080fd5b506100666100eb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100b457600080fd5b506100e9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610110565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561016b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156101a757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820c74c6343c6ec5ba71b9f147cb1a24404d2ee7d35bf7f515b17a8b110b85b7d2b0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66 PUSH2 0xEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x110 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc7 0x4c PUSH4 0x43C6EC5B 0xa7 SHL SWAP16 EQ PUSH29 0xB1A24404D2EE7D35BF7F515B17A8B110B85B7D2B002900000000000000 ",
							"sourceMap": "195:806:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;217:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;217:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;825:173;;8:9:-1;5:2;;;30:1;27;20:12;5:2;825:173:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;217:20;;;;;;;;;;;;;:::o;825:173::-;640:5;;;;;;;;;;;626:19;;:10;:19;;;618:28;;;;;;;;922:1;902:22;;:8;:22;;;;894:31;;;;;;;;960:8;932:37;;953:5;;;;;;;;;;;932:37;;;;;;;;;;;;984:8;976:5;;:16;;;;;;;;;;;;;;;;;;825:173;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "131400",
								"executionCost": "20443",
								"totalCost": "151843"
							},
							"external": {
								"owner()": "442",
								"transferOwnership(address)": "22587"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 1001,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 195,
									"end": 1001,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 195,
									"end": 1001,
									"name": "MSTORE"
								},
								{
									"begin": 450,
									"end": 507,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 450,
									"end": 507,
									"name": "POP"
								},
								{
									"begin": 491,
									"end": 501,
									"name": "CALLER"
								},
								{
									"begin": 483,
									"end": 488,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP1"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "EXP"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "DUP2"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "SLOAD"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "DUP2"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "MUL"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "NOT"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "AND"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "SWAP1"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "DUP4"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "AND"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "MUL"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "OR"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "SWAP1"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "SSTORE"
								},
								{
									"begin": 483,
									"end": 501,
									"name": "POP"
								},
								{
									"begin": 195,
									"end": 1001,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 1001,
									"name": "DUP1"
								},
								{
									"begin": 195,
									"end": 1001,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 1001,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 195,
									"end": 1001,
									"name": "CODECOPY"
								},
								{
									"begin": 195,
									"end": 1001,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 195,
									"end": 1001,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820c74c6343c6ec5ba71b9f147cb1a24404d2ee7d35bf7f515b17a8b110b85b7d2b0029",
									".code": [
										{
											"begin": 195,
											"end": 1001,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "MSTORE"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "LT"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "JUMPI"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "SWAP1"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "DIV"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "AND"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "EQ"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "JUMPI"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "EQ"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "JUMPI"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "JUMPDEST"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 195,
											"end": 1001,
											"name": "REVERT"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "JUMP"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "RETURN"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "JUMPDEST"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "POP"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "DUP1"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "SUB"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "DUP2"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "ADD"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "SWAP1"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "DUP1"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "DUP1"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "AND"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "SWAP1"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "ADD"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "SWAP1"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "SWAP3"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "SWAP2"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "SWAP1"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "POP"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "POP"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "POP"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "JUMP"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "JUMPDEST"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "STOP"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "SLOAD"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "EXP"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "DIV"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 237,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "JUMPDEST"
										},
										{
											"begin": 640,
											"end": 645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 640,
											"end": 645,
											"name": "DUP1"
										},
										{
											"begin": 640,
											"end": 645,
											"name": "SWAP1"
										},
										{
											"begin": 640,
											"end": 645,
											"name": "SLOAD"
										},
										{
											"begin": 640,
											"end": 645,
											"name": "SWAP1"
										},
										{
											"begin": 640,
											"end": 645,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 640,
											"end": 645,
											"name": "EXP"
										},
										{
											"begin": 640,
											"end": 645,
											"name": "SWAP1"
										},
										{
											"begin": 640,
											"end": 645,
											"name": "DIV"
										},
										{
											"begin": 640,
											"end": 645,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 640,
											"end": 645,
											"name": "AND"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "AND"
										},
										{
											"begin": 626,
											"end": 636,
											"name": "CALLER"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "AND"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "EQ"
										},
										{
											"begin": 618,
											"end": 646,
											"name": "ISZERO"
										},
										{
											"begin": 618,
											"end": 646,
											"name": "ISZERO"
										},
										{
											"begin": 618,
											"end": 646,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 618,
											"end": 646,
											"name": "JUMPI"
										},
										{
											"begin": 618,
											"end": 646,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 618,
											"end": 646,
											"name": "DUP1"
										},
										{
											"begin": 618,
											"end": 646,
											"name": "REVERT"
										},
										{
											"begin": 618,
											"end": 646,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 618,
											"end": 646,
											"name": "JUMPDEST"
										},
										{
											"begin": 922,
											"end": 923,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 902,
											"end": 924,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 924,
											"name": "AND"
										},
										{
											"begin": 902,
											"end": 910,
											"name": "DUP2"
										},
										{
											"begin": 902,
											"end": 924,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 924,
											"name": "AND"
										},
										{
											"begin": 902,
											"end": 924,
											"name": "EQ"
										},
										{
											"begin": 902,
											"end": 924,
											"name": "ISZERO"
										},
										{
											"begin": 894,
											"end": 925,
											"name": "ISZERO"
										},
										{
											"begin": 894,
											"end": 925,
											"name": "ISZERO"
										},
										{
											"begin": 894,
											"end": 925,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 894,
											"end": 925,
											"name": "JUMPI"
										},
										{
											"begin": 894,
											"end": 925,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 894,
											"end": 925,
											"name": "DUP1"
										},
										{
											"begin": 894,
											"end": 925,
											"name": "REVERT"
										},
										{
											"begin": 894,
											"end": 925,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 894,
											"end": 925,
											"name": "JUMPDEST"
										},
										{
											"begin": 960,
											"end": 968,
											"name": "DUP1"
										},
										{
											"begin": 932,
											"end": 969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 932,
											"end": 969,
											"name": "AND"
										},
										{
											"begin": 953,
											"end": 958,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 953,
											"end": 958,
											"name": "DUP1"
										},
										{
											"begin": 953,
											"end": 958,
											"name": "SWAP1"
										},
										{
											"begin": 953,
											"end": 958,
											"name": "SLOAD"
										},
										{
											"begin": 953,
											"end": 958,
											"name": "SWAP1"
										},
										{
											"begin": 953,
											"end": 958,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 953,
											"end": 958,
											"name": "EXP"
										},
										{
											"begin": 953,
											"end": 958,
											"name": "SWAP1"
										},
										{
											"begin": 953,
											"end": 958,
											"name": "DIV"
										},
										{
											"begin": 953,
											"end": 958,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 953,
											"end": 958,
											"name": "AND"
										},
										{
											"begin": 932,
											"end": 969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 932,
											"end": 969,
											"name": "AND"
										},
										{
											"begin": 932,
											"end": 969,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 932,
											"end": 969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 932,
											"end": 969,
											"name": "MLOAD"
										},
										{
											"begin": 932,
											"end": 969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 932,
											"end": 969,
											"name": "MLOAD"
										},
										{
											"begin": 932,
											"end": 969,
											"name": "DUP1"
										},
										{
											"begin": 932,
											"end": 969,
											"name": "SWAP2"
										},
										{
											"begin": 932,
											"end": 969,
											"name": "SUB"
										},
										{
											"begin": 932,
											"end": 969,
											"name": "SWAP1"
										},
										{
											"begin": 932,
											"end": 969,
											"name": "LOG3"
										},
										{
											"begin": 984,
											"end": 992,
											"name": "DUP1"
										},
										{
											"begin": 976,
											"end": 981,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 976,
											"end": 981,
											"name": "DUP1"
										},
										{
											"begin": 976,
											"end": 992,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 976,
											"end": 992,
											"name": "EXP"
										},
										{
											"begin": 976,
											"end": 992,
											"name": "DUP2"
										},
										{
											"begin": 976,
											"end": 992,
											"name": "SLOAD"
										},
										{
											"begin": 976,
											"end": 992,
											"name": "DUP2"
										},
										{
											"begin": 976,
											"end": 992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 992,
											"name": "MUL"
										},
										{
											"begin": 976,
											"end": 992,
											"name": "NOT"
										},
										{
											"begin": 976,
											"end": 992,
											"name": "AND"
										},
										{
											"begin": 976,
											"end": 992,
											"name": "SWAP1"
										},
										{
											"begin": 976,
											"end": 992,
											"name": "DUP4"
										},
										{
											"begin": 976,
											"end": 992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 992,
											"name": "AND"
										},
										{
											"begin": 976,
											"end": 992,
											"name": "MUL"
										},
										{
											"begin": 976,
											"end": 992,
											"name": "OR"
										},
										{
											"begin": 976,
											"end": 992,
											"name": "SWAP1"
										},
										{
											"begin": 976,
											"end": 992,
											"name": "SSTORE"
										},
										{
											"begin": 976,
											"end": 992,
											"name": "POP"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "POP"
										},
										{
											"begin": 825,
											"end": 998,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}}},\"title\":\"Ownable\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"zombies/ownable.sol\":\"Ownable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"zombies/ownable.sol\":{\"keccak256\":\"0x6294b98179b7702c7e76108911104d19f891b949de320a8443ed24642c26752e\",\"urls\":[\"bzzr://d17c67994e5093f27f23480ddf49d62dca91d45fcced09ce17df458a8a147f61\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "zombies/ownable.sol:13:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n  function Ownable() public {\r\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 507,
					"file": "zombies/ownable.sol",
					"start": 450
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "zombies/ownable.sol:6:1: Warning: Source file does not specify required compiler version!Consider adding \"pragma solidity ^0.4.26;\"\ncontract Ownable {\r\n^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Source file does not specify required compiler version!Consider adding \"pragma solidity ^0.4.26;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": 1003,
					"file": "zombies/ownable.sol",
					"start": 195
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "zombies/ownable.sol:29:5: Warning: Invoking events without \"emit\" prefix is deprecated.\n    OwnershipTransferred(owner, newOwner);\r\n    ^-----------------------------------^\n",
				"message": "Invoking events without \"emit\" prefix is deprecated.",
				"severity": "warning",
				"sourceLocation": {
					"end": 969,
					"file": "zombies/ownable.sol",
					"start": 932
				},
				"type": "Warning"
			}
		],
		"sources": {
			"zombies/ownable.sol": {
				"ast": {
					"absolutePath": "zombies/ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							54
						]
					},
					"id": 55,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Ownable\r\n@dev The Ownable contract has an owner address, and provides basic authorization control\r\nfunctions, this simplifies the implementation of \"user permissions\".\r",
							"fullyImplemented": true,
							"id": 54,
							"linearizedBaseContracts": [
								54
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 54,
									"src": "217:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "217:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 8,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "269:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "300:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "268:57:0"
									},
									"src": "242:84:0"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "476:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 11,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2,
														"src": "483:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 12,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 69,
															"src": "491:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "491:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "483:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "483:18:0"
											}
										]
									},
									"documentation": "@dev The Ownable constructor sets the original `owner` of the contract to the sender\r\naccount.\r",
									"id": 17,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Ownable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "466:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "476:0:0"
									},
									"scope": 54,
									"src": "450:57:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "611:49:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 20,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 69,
																	"src": "626:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "626:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 22,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2,
																"src": "640:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "626:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 19,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															72,
															73
														],
														"referencedDeclaration": 72,
														"src": "618:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "618:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "618:28:0"
											},
											{
												"id": 26,
												"nodeType": "PlaceholderStatement",
												"src": "653:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.\r",
									"id": 28,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "608:2:0"
									},
									"src": "590:70:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "887:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 36,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "902:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 38,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "922:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 37,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "914:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "914:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "902:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															72,
															73
														],
														"referencedDeclaration": 72,
														"src": "894:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "894:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "894:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 44,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2,
															"src": "953:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 45,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "960:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 43,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "932:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "932:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "932:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 48,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2,
														"src": "976:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 49,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "984:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "976:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "976:16:0"
											}
										]
									},
									"documentation": "@dev Allows the current owner to transfer control of the contract to a newOwner.\r\n@param newOwner The address to transfer ownership to.\r",
									"id": 53,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 33,
											"modifierName": {
												"argumentTypes": null,
												"id": 32,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 28,
												"src": "877:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "877:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "852:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "851:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:0:0"
									},
									"scope": 54,
									"src": "825:173:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 55,
							"src": "195:806:0"
						}
					],
					"src": "195:808:0"
				},
				"id": 0
			}
		}
	}
}